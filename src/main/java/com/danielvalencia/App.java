package com.danielvalencia;import com.danielvalencia.model.Comment;import com.danielvalencia.repositories.CommentsRepository;import com.danielvalencia.repositories.Repository;import com.google.gson.Gson;import spark.ResponseTransformer;import spark.Spark;import java.util.ArrayList;import java.util.List;import static spark.Spark.after;import static spark.Spark.get;import static spark.Spark.post;/** * Hello world! * */public class App {    public static void main(String[] args)    {        Spark.staticFileLocation("/public");        Repository<Comment> commentsRepository = new CommentsRepository();        Gson gson = new Gson();        after((request, response) -> response.header("Cache-Control", "no-cache"));        get("/comments.json", (req, res) -> {            res.type("application/json");            List<Comment> commentList = new ArrayList<>();            commentsRepository.findAll(10)                    .toBlocking()                    .forEach(comment -> commentList.add(comment));            return commentList;        }, gson::toJson);        post("/comments.json", (req, res) -> {            Comment comment = new Comment(req.queryParams("author"), req.queryParams("text"));            if (commentsRepository.add(comment))            {                res.status(201);            } else            {                res.status(500);            }            return "";        });    }}